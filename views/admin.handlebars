<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
<style>

  #admin_container {
    background-color: rgba(206, 204, 205, 0.4);
  }

  #admin_header {
    text-align: center;
    margin-bottom: 50px;
  }

  .admin_form div {
    margin-bottom: 20px;
  }

  #recipes_and_ingredients {
    /* display: flex; */
    /* justify-content: space-around; */
    max-width: 1400px;
  }

    #recipes_and_ingredients section {
      padding: 20px;
      border-radius: 5px;
      box-shadow: 2px 1px 5px rgba(0, 0, 0, 0.4);
      /* align-self: flex-start; */
    }

      #recipes_and_ingredients section h2 {
        margin-bottom: 30px;
      }

  .ingredients_list {
    font-size: 9px;
    padding: 10px;
    background-color: rgba(0, 255, 191, 0.8);
    border-radius: 5px;
  }

    .ingredients_list select, .ingredients_list input {
      margin-left: 5px;
      margin-right: 5px;
    }

  #recipe_instructions_div {
    margin-top: 30px;
  }

    #recipe_instructions_div textarea {
      display: block;
      width: 100%;
    }

  .table-scroll {
    overflow: scroll;
  }

  #ingredients_section {
    max-height: 300px;
    overflow: hidden;
    margin-bottom: 20px;
  }

    #ingredients_section section {
      max-height: 250px;
      overflow-y: auto;
    }

  #recipes_section {
    max-height: 750px;
    overflow: hidden;
  }

    #recipes_section section {
      max-height: 700px;
      overflow-y: auto;
    }

  .recipe_table_image {
    width: 100px;
    height: 100px;
  }

</style>

<section id="admin_container">

  <section id="admin_header">
    <h1>Admin Portal</h1>
    <h3>Enter new recipies or new ingredients</h3>
  </section>

  <section id="recipes_and_ingredients" class="container">

    <!-- All Ingredients and New Ingredients -->
    <section class="row" id="ingredients_section" >

      <!-- New ingredients -->
      <section class="col-sm-12 col-md-4">
        <h2>Add new ingredients</h2>
        <form id='new_ingredient_form' class='admin_form' action='/admin/add_ingredient' method='POST'>
          <label for='ingredient_name'>Ingredient name
            <input type='text' id='ingredient_name' name='ingredient_name' required>
          </label>

          <button id='submit_new_ingredient'>Submit</button>
        </form>
      </section>

      <!-- All ingredients -->
      <section class="col-sm-12 col-md-6 offset-md-2">
        <table class="table table-hover table-striped table-scroll">
          <thead>
            <tr>
              <th>Name</th>
              <th>Actions</th>
            </tr>
          </thead>

          <tbody>
            {{#each ingredients}}
            <tr>
              <td>{{this.ingredient_name}}</td>
              <td>
                <button><a href="/ingredients/actions/{{this.ingredient_id}}">More</a></button>
              </td>
            </tr>
            {{/each}}
          </tbody>
        </table>
      </section>
    </section>

    <!-- All Recipes and New Recipes -->
    <section class="row" id="recipes_section" >

      <!-- New recipes -->
      <section class="col-sm-12 col-md-5">
        <h2>Add a new recipe</h2>
        <form id='new_recipe_form' class='admin_form' action='/admin/add_recipe' method='POST'>
          <div>
            <label for='recipe_name'>Recipe name
              <input type='text' id='recipe_name' name='recipe_name' class="pull-right">
            </label>
          </div>

          <div>
            <label for='recipe_img'>Image url (optional)
              <input type='text' id='recipe_img' name='recipe_img'>
            </label>
          </div>

          <div>
            <label for='recipe_calories'>Total calories
              <input type='number' id='recipe_calories' name='recipe_calories' step='0.01' value='0.00' placeholder='0.00'>
            </label>
          </div>

          <!-- ingredients -->
          <div class='ingredients_list'>

            <div class="ing_div_1">
              <label for='ing_1'>Ingredient #1
                <select name='ing_1' id='ing_1'>
                  {{#each ingredients}}
                  <option value='{{this.ingredient_id}}'>{{this.ingredient_name}}</option>
                  {{/each}}
                </select>
              </label>

              <label for='ing_qty_1'>Quantity:
                <input type='number' name='ing_qty_1' id='ing_qty_1' step='0.01' value='0.00' placeholder='0.00'>
              </label>

              <label for='ing_metric_1'>Units:
                <input type='text' name='ing_metric_1' id='ing_metric_1'>
              </label>
            </div>

          </div>
          <button id="add_ing_to_form_button">Add ingredients</button>

          <div id="recipe_instructions_div">
            <label for='recipe_instructions'>Recipe Instructions</label>
            <textarea id='recipe_instructions' name='recipe_instructions' rows='5'></textarea>
          </div>

          <button id='submit_new_recipe'>Submit</button>
        </form>
      </section>

      <!-- All recipes -->
      <section class="col-sm-12 col-md-6 offset-md-1">
        <table class="table table-hover table-striped table-scroll">
          <thead>
            <tr>
              <th>Image</th>
              <th>Name</th>
              <th>Calories</th>
              <th colspan="2">Actions</th>
            </tr>
          </thead>

          <tbody>
            {{#each recipes}}
            <tr>
              <td><img src="{{this.recipe_img}}" alt="{{this.recipe_name}}" class="recipe_table_image"></td>
              <td>{{this.recipe_name}}</td>
              <td>{{this.total_calories}}</td>
              <td>
                <button>
                  <a href="/recipes/actions/{{this.recipe_id}}">More</a>
                </button>
              </td>
            </tr>
            {{/each}}
          </tbody>
        </table>
      </section>
    </section>


  </section> <!-- recipes_and_ingredients -->

</section> <!-- admin_container -->

<script>
// to add dynamic ingredients to recipes form
// let ingredients = [{"id": 1, "name": "green onions"}, {"id": 2, "name": "pizza"}, {"id": 3, "name": "pepper"}];
let ingredients = [];
let one_ingredient = {};
{{#each ingredients}}
  one_ingredient = {};
  one_ingredient.id = "{{this.ingredient_id}}";
  one_ingredient.name = "{{this.ingredient_name}}";
  ingredients.push(one_ingredient);
{{/each}}

let ing_container = $('.ingredients_list').first();
let add_ing_button = $('#add_ing_to_form_button');
let ing_count = 1;

add_ing_button.click(add_ing_to_form);

function add_ing_to_form(e) {
  // increment ingredient count
  ing_count++;

  // create container div
  let ing_div = $('<div/>', {class: 'ing_div_' + ing_count});

  // create select ingredient //
  // create label
  let ing_label = $('<label/>', {for: 'ing_' + ing_count});
  ing_label.append(document.createTextNode('Ingredient #' + ing_count));  // label text
  // create select
  let ing_select = $('<select/>', {name: 'ing_' + ing_count, id: 'ing_' + ing_count});
  // create options
  ingredients.map((ingredient) => {
    ing_select.append($('<option/>', {value: ingredient.id}).append(document.createTextNode(ingredient.name)));
  })
  // add select inside label
  ing_label.append(ing_select);

  // create quantity input //
  // create label
  let qty_label = $('<label/>', {for: 'ing_qty_' + ing_count});
  qty_label.append(document.createTextNode('Quantity: '));  // label text
  // create input
  qty_label.append($('<input/>',
    {type: 'number',
    name: 'ing_qty_' + ing_count,
    id: 'ing_qty_' + ing_count,
    step: '0.01',
    value: '0.00',
    placeholder: '0.00'}));

  // create units input//
  // create label
  let unit_label = $('<label/>', {for: 'ing_metric_' + ing_count});
  unit_label.append(document.createTextNode('Units: '));
  // create input
  unit_label.append($('<input/>', {type: 'text', name: 'ing_metric_' + ing_count, id: 'ing_metric_' + ing_count}));

  // create remove button //
  let remove_button = $('<button/>', {class: 'remove_ing'});
  remove_button.append(document.createTextNode('X'));
  // bind remove event
  remove_button.click(remove_ing_from_from);

  // add ingredient select, quantity, units, and remove button to ingredient div
  ing_div.append(ing_label);
  ing_div.append(qty_label);
  ing_div.append(unit_label);
  ing_div.append(remove_button);

  // add new ingredient div to ingredients container
  ing_container.append(ing_div);

  e.preventDefault();
}

function remove_ing_from_from(e) {
  e.preventDefault();

  // this ingredient div
  let this_ing_div = $(this).parent();

  // remove this div from ingredient container
  this_ing_div.remove();
}

// add new ingredient
$('#submit_new_ingredient').click(create_new_ingredient);
function create_new_ingredient(e) {
  e.preventDefault();

  let form = $('#new_ingredient_form');
  let route = form.attr('action');
  let ingredient_name = form.find('[name="ingredient_name"]').val();

  // check for empty input
  if (ingredient_name.length == 0) {
    alert("Ingredient name cannot be empty");
    return;
  }

  // send data
  $.ajax({
    method: "POST",
    url: route,
    contentType: "application/json",
    dataType: "json",
    data: JSON.stringify({ingredient_name})
  })
  .done((msg) => {
    // inform user of success
    alert(msg);

    // reload page
    window.location.reload(true);
  })
  .fail((msg) => {
    // inform user of failed attempt
    alert(msg.responseJSON);
  })
}

// add new recipe
$('#submit_new_recipe').click(create_new_recipe);
function create_new_recipe(e) {
  e.preventDefault();

  let form = $('#new_recipe_form');
  let route = form.attr('action');

  let recipe_name = form.find('[name="recipe_name"]').val();
  let img_url = form.find('[name="recipe_img"]').val();       // optional
  let calories = form.find('[name="recipe_calories"]').val();
  let instructions = form.find('[name="recipe_instructions"]').val();

  // check for empty recipe inputs
  if (recipe_name.length == 0 || calories == 0 || instructions.length == 0) {
    alert("New recipe form missing required fields");
    return;
  }

  // fill out recipes data
  let recipes_submission = {};
  recipes_submission.recipe_name = recipe_name;
  recipes_submission.img_url = img_url;
  recipes_submission.calories = calories;
  recipes_submission.instructions = instructions;

  // parse ingredients
  let ingredients_list_div = form.find('.ingredients_list').first();
  let ingredients_list = ingredients_list_div.children();
  let ingredients_valid = true;  // flag to denote if ingredient form filled out properly

  // variables for data submission
  let ingredients_submission = [];
  let ing_row = {};
  let ing_item;
  let ing_qty;
  let ing_metric;

  ingredients_list.each((i, ingredient_item) => {
    ingredient_item = $(ingredient_item);

    // get ingredient choice, quantity, and metric from user input
    ing_item = ingredient_item.find('select').val();
    ing_qty = ingredient_item.find(':input[type="number"]').val();
    ing_metric = ingredient_item.find(':input[type="text"]').val();

    // missing ingredient information
    if (!ing_item || !ing_qty || !ing_metric || !(ing_qty > 0) ) {
      ingredients_valid = false;
      return;
    }

    // otherwise, ingredient forms are properly filled out, create dictionary to submit
    ing_row = {};
    ing_row.ingredient_id = ing_item;
    ing_row.quantity = ing_qty;
    ing_row.metric = ing_metric;
    ingredients_submission.push(ing_row);
  });

  // if ingredients are invalid, exit function
  if (!ingredients_valid) {
    alert("Missing information in ingredients");
    return;
  }

  // attach ingredients to recipes submission
  recipes_submission.ingredients = ingredients_submission;

  // send data
  $.ajax({
    method: "POST",
    url: route,
    contentType: "application/json",
    dataType: "json",
    data: JSON.stringify(recipes_submission)
  })
  .done((msg) => {
    // inform user of success
    alert(msg);

    // reload page
    window.location.reload(true);
  })
  .fail((msg) => {
    // inform user of failed attempt
    if (msg.status >= 500) {
      // 500 error
      alert('Error 500: Oops! Something went wrong.');
    } else {
      // 400 error
      alert(msg.responseJSON);
    }
  })

}

</script>
