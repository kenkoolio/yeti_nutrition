<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>

<style>

  #admin_container {
    background-color: rgba(206, 204, 205, 0.4);
    padding-top: 20px;
    padding-bottom: 20px;
    max-width: 100%;
  }

    #admin_container a {
      text-decoration: none;
    }
    #admin_container a:visited {
      color: inherit;
    }

  #admin_header {
    text-align: center;
    margin-bottom: 50px;
  }

    .recipe_edit_preview img {
      width: 500px;
      height: 500px;
      object-fit: contain;
    }

  .ingredients_list {
    font-size: 9px;
    padding: 10px;
    background-color: rgba(192,255,238, 0.8);
    border-radius: 5px;
  }

    .ingredients_list select, .ingredients_list input {
      margin-left: 5px;
      margin-right: 5px;
    }

  [class*="ing_div_"] {
    border-bottom: 1px solid lightgray;
    margin-bottom: 20px;
  }

  .remove_ing {
    border-radius: 50%;
  }


</style>

<section id="admin_container" class="container">

  <section id="admin_header" class="row">
    <div class="col-sm-12 col-md-2 offset-md-1 pull-left">
      <button class="btn btn-outline-warning"><a href='/admin'>< Back to admin page</a></button>
    </div>

    <div class="col-sm-12 col-md-4 offset-md-1">
      <h1>Admin Portal</h1>
      <h3>Edit Recipe - {{recipe.recipe_name}}</h3>
    </div>
  </section>

  <section>

    <div id="recipe-edit-form-div" class="container">
      <div class="row">
        <form id="edit_recipe_form" class="col-sm-12 order-sm-2 order-md-1 col-md-6 offset-md-0" action="/admin/recipes">
          <div class="form-group">
            <label>ID: </label>
            <input class="form-control" type="number" name="rep_id" value="{{recipe.recipe_id}}" disabled></input>
          </div>

          <!-- recipe_id, recipe_name,recipe_img, total_calories, instructions -->
          <div class="form-group">
            <label for="rep_name">Name: </label>
            <input class="form-control" id="rep_name" type="text" name="rep_name" value="{{recipe.recipe_name}}"></input>
          </div>

          <!-- image -->
          <div class="form-group">
            <label for="rep_img">Image source: </label>
            <input class="form-control" id="rep_img" name="rep_img" value="{{recipe.recipe_img}}"></input>
          </div>

          <!-- total_calories -->
          <div class="form-group">
            <label for="rep_total_calories">Total calories: </label>
            <input class="form-control" type="number" id="rep_total_calories" name="rep_total_calories" value="{{recipe.total_calories}}" step='0.01'></input>
          </div>

          <!-- ingredients list -->
          <div class="form-group">
            <div class="ingredients_list">
            </div>
            <button id="add_ing_to_form_button" class="btn btn-sm btn-outline-primary">Add ingredients</button>
          </div>

          <!-- instructions -->
          <div class="form-group">
            <label for="rep_instructions">Instructions: </label>
            <textarea class="form-control" id="rep_instructions" name="rep_instructions" rows="3">{{recipe.instructions}}</textarea>
          </div>

          <div class="form-group">
            <button class="btn btn-outline-success" id="submit_edit_recipe">Save Changes</button>
            <button class="btn btn-outline-danger" id="submit_delete_recipe">Delete</button>
          </div>
        </form>

        <div class="col-sm-12 order-sm-1 order-md-2 col-md-4 recipe_edit_preview"> <!-- recipe image preview -->
          <img src="/images/{{recipe.recipe_img}}" alt="{{recipe.recipe_name}}">
        </div>
      </div>
    </div><!-- recipe-edit-form-div -->

  </section>

</section> <!-- admin_container -->

<script>


// setup
let ing_count = 0;
let ing_container = $('.ingredients_list').first();
let add_ing_button = $('#add_ing_to_form_button');
add_ing_button.click(add_ing_to_form);

// create list of all ingredients to add dynamic ingredients to recipes form
// example: [{"id": 1, "name": "green onions"}, {"id": 2, "name": "pizza"}, {"id": 3, "name": "pepper"}];
let ingredients = [];
let one_ingredient = {};
{{#each all_ingredients}}
  one_ingredient = {};
  one_ingredient.id = "{{this.ingredient_id}}";
  one_ingredient.name = "{{this.ingredient_name}}";
  ingredients.push(one_ingredient);
{{/each}}

// populate recipe ingredient form with current list of its ingredients
{{#each recipe_ingredients}}
  existing_ingredient = {};
  existing_ingredient.id = "{{this.ingredient_id}}";
  existing_ingredient.name = "{{this.ingredient_name}}";
  existing_ingredient.quantity = "{{this.quantity}}";
  existing_ingredient.metric = "{{this.metric}}";
  add_ing_to_form(null, existing_ingredient);
{{/each}}

// edit recipe
$('#submit_edit_recipe').click(submit_edit_recipe);
function submit_edit_recipe(e) {
  e.preventDefault();

  let form = $('#edit_recipe_form');
  let route = form.attr('action');

  let recipe_id = $('[name="rep_id"]').val();
  let recipe_name = $('[name="rep_name"]').val();
  let recipe_image = $('[name="rep_img"]').val();
  let recipe_calories = $('[name="rep_total_calories"]').val();
  let recipe_instructions = $('[name="rep_instructions"]').val();

  // check if any required recipes fields empty
  if (!recipe_name || !recipe_instructions || !recipe_calories || recipe_calories <= 0 ) {
    window.alert("Recipe form missing required fields");
    return;
  }

  // make payload
  let recipes_submission = {
    recipe_id,
    recipe_name,
    recipe_image,
    recipe_calories,
    recipe_instructions
  };

  // get ingredients data
  let [ingredients_valid, ingredients_submissions] = extract_ingredient_data(form);

  // if ingredients are invalid, exit function
  if (!ingredients_valid) {
    alert("Missing information in ingredients");
    return;
  }

  // attach ingredients to recipes submission
  recipes_submission.ingredients = ingredients_submissions;

  // send data
  sendJSONData(route, "PATCH", recipes_submission);
}

// delete recipe
$('#submit_delete_recipe').click(submit_delete_recipe);
function submit_delete_recipe(e) {
  e.preventDefault();

  if (!window.confirm("Do you really want to delete this recipe?")) {
    return;
  }

  let route = $('#edit_recipe_form').attr('action');
  let recipe_id = $('[name="rep_id"]').val();

  sendJSONData(route, "DELETE", {recipe_id}, back_to_admin_page);
}

// callback to redirect to admin page on successful deletion, should not need changing
function back_to_admin_page() {
  window.location.href = ("/admin");
}

// to be combined with other js files, do not change
function sendJSONData(route, method, data, on_success) {
  $.ajax({
    method: method,
    url: route,
    contentType: "application/json",
    dataType: "json",
    data: JSON.stringify(data)
  })
  .done((msg) => {
    // inform user of success
    alert(msg);

    // success callback
    if (on_success && typeof on_success === "function") {
      on_success();
    } else {
      // default behavior: reload page
      window.location.reload(true);
    }

  })
  .fail((msg) => {
    // inform user of failed attempt
    if (msg.status >= 500) {
      // 500 error
      alert('Error 500: Oops! Something went wrong.');
    } else {
      // 400 error
      alert(msg.responseJSON);
    }
  })
}

// add ingredient to form function, copied from admin.handlebars.
// intention is to merge/abstract them.
// two different ways to use:
//  1) to load all existing ingredients of a recipe
//  2) to add a new ingredient via button click
function add_ing_to_form(e, existing_ingredient) {
  // increment ingredient count
  ing_count++;

  // create container div
  let ing_div = $('<div/>', {class: 'ing_div_' + ing_count});

  // create select ingredient //
  // create label
  let ing_label = $('<label/>', {for: 'ing_' + ing_count});
  ing_label.append(document.createTextNode('Ingredient #' + ing_count));  // label text
  // create select
  let ing_select = $('<select/>', {name: 'ing_' + ing_count, id: 'ing_' + ing_count});
  // create options
  ingredients.map((ingredient) => {
    ing_select.append($('<option/>', {value: ingredient.id}).append(document.createTextNode(ingredient.name)));
  })
  // add select inside label
  ing_label.append(ing_select);

  // create quantity input //
  // create label
  let qty_label = $('<label/>', {for: 'ing_qty_' + ing_count});
  qty_label.append(document.createTextNode('Quantity: '));  // label text
  // create input
  qty_label.append($('<input/>',
    {type: 'number',
    name: 'ing_qty_' + ing_count,
    id: 'ing_qty_' + ing_count,
    step: '0.01',
    value: '0.00',
    placeholder: '0.00'}));

  // create units input//
  // create label
  let unit_label = $('<label/>', {for: 'ing_metric_' + ing_count});
  unit_label.append(document.createTextNode('Units: '));
  // create input
  unit_label.append($('<input/>', {type: 'text', name: 'ing_metric_' + ing_count, id: 'ing_metric_' + ing_count}));

  // create remove button //
  let remove_button = $('<button/>', {class: 'remove_ing btn btn-sm btn-outline-danger'});
  remove_button.append(document.createTextNode('X'));
  // bind remove event
  remove_button.click(remove_ing_from_from);

  // if populating the recipe edit form,
  // insert existing ingredient information
  if (existing_ingredient && !$.isEmptyObject(existing_ingredient)) {
    // select the ingredient
    ing_select.find("[value="+ existing_ingredient.id +"]").prop("selected", true);
    // set the quantity
    qty_label.find("input").val(existing_ingredient.quantity);
    // set the metrics/units
    unit_label.find("input").val(existing_ingredient.metric);
  }

  // add ingredient select, quantity, units, and remove button to ingredient div
  ing_div.append(ing_label);
  ing_div.append(qty_label);
  ing_div.append(unit_label);
  ing_div.append(remove_button);

  // add new ingredient div to ingredients container
  ing_container.append(ing_div);

  if (e) {
    e.preventDefault();
  }
}

// remove ingredient from form function, copied from admin.handlebars.
// intention is to merge/abstract them.
// should not need to be changed.
function remove_ing_from_from(e) {
  e.preventDefault();

  // this ingredient div
  let this_ing_div = $(this).parent();

  // remove this div from ingredient container
  this_ing_div.remove();
}

// extracts recipe ingredients list data, CHANGED -- use this version
function extract_ingredient_data(form) {
  // parse ingredients
  let ingredients_list_div = form.find('.ingredients_list').first();
  let ingredients_list = ingredients_list_div.children();

  // variables for data submission
  let ingredients_valid = true;  // flag to denote if ingredient form filled out properly
  let ingredients_submission = [];
  let ing_row = {};
  let ing_item;
  let ing_qty;
  let ing_metric;

  ingredients_list.each((i, ingredient_item) => {
    ingredient_item = $(ingredient_item);

    // get ingredient choice, quantity, and metric from user input
    ing_item = ingredient_item.find('select').val();
    ing_qty = ingredient_item.find(':input[type="number"]').val();
    ing_metric = ingredient_item.find(':input[type="text"]').val();

    // missing ingredient information
    if (!ing_item || !ing_qty || !ing_metric || ing_qty <= 0) {
      ingredients_valid = false;
      return;
    }

    // otherwise, ingredient forms are properly filled out, create dictionary to submit
    ing_row = {};
    ing_row.ingredient_id = ing_item;
    ing_row.quantity = ing_qty;
    ing_row.metric = ing_metric;
    ingredients_submission.push(ing_row);
  });

  // check for empty ingredients list
  if (!ingredients_submission.length) {
    ingredients_valid = false;
  }

  return [ingredients_valid, ingredients_submission];
}
</script>
